http://eewang.github.io/blog/2013/03/12/how-to-schedule-tasks-using-whenever/
https://github.com/jmettraux/rufus-scheduler/blob/two/README.rdoc
https://github.com/resque/resque-scheduler
http://dougmcinnes.com/2008/07/14/craken/
http://backgroundrb.rubyforge.org/
http://stackoverflow.com/questions/285717/a-cron-job-for-rails-best-practices

for queries
http://stackoverflow.com/questions/3046607/rails-find-or-create-by-more-than-one-attribute

for deployment
http://robmclarty.com/blog/how-to-deploy-a-rails-4-app-with-git-and-capistrano

def new
		scheduler = Rufus::Scheduler.new
		scheduler.every '1h' do
		# doc = Nokogiri::XML(File.open("/home/sk/Documents/xmltask/category.xml"))
			doc = Nokogiri::XML(open("http://api-product.skimlinks.com/categories?key=8bf53d38d24f389b6d35ef4014a48dad&format=xml"))
			categories = doc.search("//category")
			categories.each do |category|
				if @c=Category.find_by_category_id(category.at('id').content)
					@c.update_attribute(:name,category.at('name').text)
				else
					c = Category.new(:provider_name => "skimlinks",:category_id => category.at('id').content,:name => category.at('name').text)
					# puts category.at('id').content
					c.save
				end
			end
		
		# f.close
			render :text => "OK!!Done"
		end
	end

				# if !@c.count
				# 		@c = Category.new(:provider_name => "skimlinks",:category_id => category.at('id').content,:name => category.at('name').text)
				# 		# puts category.at('id').content
				# 		@c.save
				# else 
				# 	@c=@c.first
				# 	if @c.name != category.at('name').text
				# 	 @c.update_attribute(:name,category.at('name').text)
				# 	 @count = @count+1
				# 	# @c=Category.where("category_id = ? and provider_name = ?",category.at('id').content ,"skimlinks")
				# 	end
				# end

	ssh root@162.243.252.62
	Current directory :  ln -s /var/www/phpmyadmin ./public/phpmyadmin 
	Current directory :  chmod -R 777 ./tmp/
	than  
	as
